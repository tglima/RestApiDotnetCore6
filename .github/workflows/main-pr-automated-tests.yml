name: Verify pull request

on:
  pull_request:
    branches:
      - main
env:
  DOTNET_VERSION: 6
  COVERAGE_RESULT: 0

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET Core
        run: |
          echo "##vso[task.setvariable variable=dotnet_path;isoutput=true]$(DOTNET_VERSION)"
          echo "##vso[task.setvariable variable=dotnet_sdk_path;isoutput=true]$(DOTNET_VERSION)"
          echo "##vso[task.setvariable variable=dotnet_pack_path;isoutput=true]$(DOTNET_VERSION)"
          dotnet --version

      - name: Install dependencies
        run: |
          dotnet restore

      - name: Run tests
        run: |
          dotnet test /p:CollectCoverage=true /p:CoverletOutput=../  /p:CoverletOutputFormat=cobertura
          if [ $? -eq 0 ]; then
              echo "Testes bem-sucedidos!"
          else
              echo "Testes falharam!"
              exit 1
          fi

      - name: Get coverage %
        run: |
          coverage=$(grep -m 1 -oP '(?<=line-rate=")[^"]+' coverage.cobertura.xml)
          echo "Cobertura de código provisória: $coverage%"
          LC_NUMERIC="C"
          coverage=$(echo "$coverage * 100" | bc)
          coverage=$(printf "%.2f" $coverage)
          echo "Cobertura de código final: $coverage%"
          echo "COVERAGE_RESULT=$coverage" >> $GITHUB_ENV

      - name: Check code coverage
        run: |
          LC_NUMERIC="C"
          coverage=${{ env.COVERAGE_RESULT }}
          # Check if coverage is at least 70%
          if (( $(echo "$coverage >= 70" | bc -l) )); then
              echo "Cobertura de código OK: $coverage%."
          else
              echo "Cobertura de código insuficiente: $coverage%."
              exit 1
          fi

      - name: Comment on Pull Request
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const time = new Date().toLocaleString();
             await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${time}\nAguarde a análise do PR`
            })

      - name: Close Pull Request on Test Failure
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${new Date().toLocaleString()}\nOs testes automatizados falharam ou a cobertura de testes está abaixo do esperado. Verifique os testes e a cobertura de testes para identificar a causa do problema e corrigi-lo. Este pull request foi fechado automaticamente.`
            });
            await github.rest.pulls.update({
              pull_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });